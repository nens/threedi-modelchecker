name: Linux

# Run on PR requests. And on master itself.
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  TestLinux:
    name: Linux, Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # 2017
          - python: 3.6
            pins: "sqlalchemy==1.2.* geoalchemy2==0.9.* alembic==0.9.*"
            extras: "test,simulation_templates,postgis"
          # 2018
          - python: 3.7
            pins: "sqlalchemy==1.2.* alembic==1.2.*"
            extras: "test,simulation_templates,postgis"
          # 2019
          - python: 3.8
            pins: "sqlalchemy==1.3.* alembic==1.4.*"
            extras: "test,simulation_templates,postgis"
          # current
          - python: 3.9
            pins: ""
            extras: "test,simulation_templates,postgis,migrations"

    services:
      postgis:
        image: mdillon/postgis
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgis
          POSTGRES_PASSWORD: mysecret

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install psql, sqlite3 and spatialite
        run: |
          sudo apt-get install --yes --no-install-recommends postgresql-client sqlite3 libsqlite3-mod-spatialite
  
      - name: Load test postgis database
        shell: bash
        run: | 
          psql -h localhost -d postgis -U postgis -w  < tests/data/postgres/emtpy_postgres.sql
        env:
          PGPASSWORD: mysecret

      - name: Install python dependencies
        shell: bash
        run: |
          pip install --disable-pip-version-check --upgrade pip setuptools wheel
          pip install ${{ matrix.pins }} .[${{ matrix.extras }}] pytest-cov
          pip list

      - name: Run tests
        shell: bash
        run: |
          pytest --cov threedi_modelchecker

  TestWindows:
    name: Conda ${{ matrix.os }}, Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # current
          - os: "windows-latest"
            python: 3.9
          - os: "ubuntu-latest"
            python: 3.9
          - os: "macos-latest"
            python: 3.9

    steps:
      - uses: actions/checkout@v2

      - name: Setup Conda
        uses: s-weigand/setup-conda@v1.0.5
        with:
          activate-conda: false
          conda-channels: conda-forge

      - name: Setup Environment
        shell: bash
        run: |
          conda create --name test python=${{ matrix.python }} libspatialite click sqlalchemy alembic pytest pytest-asyncio factory_boy
          source activate test
          pip install geoalchemy2==0.10.*
          python -V
          conda info
          conda list

      - name: Run tests
        shell: bash
        run: |
          source activate test
          pytest

  publish:
    name: Build and publish on PyPI
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: TestLinux
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install scm version
      run: >-
        python -m
        pip install
        setuptools==50.3.0
    - name: Install wheel
      run: >-
        python -m
        pip install
        wheel==0.35.1
    - name: Build a binary wheel and a source tarball
      run: >-
        python3 setup.py sdist bdist_wheel
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_UPLOAD_TOKEN }}
